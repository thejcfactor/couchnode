// source: couchbase/analytics/v1/analytics.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = (function() {
  if (this) { return this; }
  if (typeof window !== 'undefined') { return window; }
  if (typeof global !== 'undefined') { return global; }
  if (typeof self !== 'undefined') { return self; }
  return Function('return this')();
}.call(null));

var google_protobuf_duration_pb = require('google-protobuf/google/protobuf/duration_pb.js');
goog.object.extend(proto, google_protobuf_duration_pb);
goog.exportSymbol('proto.couchbase.analytics.v1.AnalyticsQueryRequest', null, global);
goog.exportSymbol('proto.couchbase.analytics.v1.AnalyticsQueryRequest.ScanConsistency', null, global);
goog.exportSymbol('proto.couchbase.analytics.v1.AnalyticsQueryResponse', null, global);
goog.exportSymbol('proto.couchbase.analytics.v1.AnalyticsQueryResponse.MetaData', null, global);
goog.exportSymbol('proto.couchbase.analytics.v1.AnalyticsQueryResponse.MetaData.Warning', null, global);
goog.exportSymbol('proto.couchbase.analytics.v1.AnalyticsQueryResponse.Metrics', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.couchbase.analytics.v1.AnalyticsQueryRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.couchbase.analytics.v1.AnalyticsQueryRequest.repeatedFields_, null);
};
goog.inherits(proto.couchbase.analytics.v1.AnalyticsQueryRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.couchbase.analytics.v1.AnalyticsQueryRequest.displayName = 'proto.couchbase.analytics.v1.AnalyticsQueryRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.couchbase.analytics.v1.AnalyticsQueryResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.couchbase.analytics.v1.AnalyticsQueryResponse.repeatedFields_, null);
};
goog.inherits(proto.couchbase.analytics.v1.AnalyticsQueryResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.couchbase.analytics.v1.AnalyticsQueryResponse.displayName = 'proto.couchbase.analytics.v1.AnalyticsQueryResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.couchbase.analytics.v1.AnalyticsQueryResponse.Metrics = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.couchbase.analytics.v1.AnalyticsQueryResponse.Metrics, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.couchbase.analytics.v1.AnalyticsQueryResponse.Metrics.displayName = 'proto.couchbase.analytics.v1.AnalyticsQueryResponse.Metrics';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.couchbase.analytics.v1.AnalyticsQueryResponse.MetaData = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.couchbase.analytics.v1.AnalyticsQueryResponse.MetaData.repeatedFields_, null);
};
goog.inherits(proto.couchbase.analytics.v1.AnalyticsQueryResponse.MetaData, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.couchbase.analytics.v1.AnalyticsQueryResponse.MetaData.displayName = 'proto.couchbase.analytics.v1.AnalyticsQueryResponse.MetaData';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.couchbase.analytics.v1.AnalyticsQueryResponse.MetaData.Warning = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.couchbase.analytics.v1.AnalyticsQueryResponse.MetaData.Warning, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.couchbase.analytics.v1.AnalyticsQueryResponse.MetaData.Warning.displayName = 'proto.couchbase.analytics.v1.AnalyticsQueryResponse.MetaData.Warning';
}

/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.couchbase.analytics.v1.AnalyticsQueryRequest.repeatedFields_ = [6];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.couchbase.analytics.v1.AnalyticsQueryRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.couchbase.analytics.v1.AnalyticsQueryRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.couchbase.analytics.v1.AnalyticsQueryRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.couchbase.analytics.v1.AnalyticsQueryRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    bucketName: jspb.Message.getFieldWithDefault(msg, 8, ""),
    scopeName: jspb.Message.getFieldWithDefault(msg, 9, ""),
    statement: jspb.Message.getFieldWithDefault(msg, 1, ""),
    readOnly: jspb.Message.getBooleanFieldWithDefault(msg, 2, false),
    clientContextId: jspb.Message.getFieldWithDefault(msg, 3, ""),
    priority: jspb.Message.getBooleanFieldWithDefault(msg, 4, false),
    scanConsistency: jspb.Message.getFieldWithDefault(msg, 5, 0),
    positionalParametersList: msg.getPositionalParametersList_asB64(),
    namedParametersMap: (f = msg.getNamedParametersMap()) ? f.toObject(includeInstance, undefined) : []
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.couchbase.analytics.v1.AnalyticsQueryRequest}
 */
proto.couchbase.analytics.v1.AnalyticsQueryRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.couchbase.analytics.v1.AnalyticsQueryRequest;
  return proto.couchbase.analytics.v1.AnalyticsQueryRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.couchbase.analytics.v1.AnalyticsQueryRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.couchbase.analytics.v1.AnalyticsQueryRequest}
 */
proto.couchbase.analytics.v1.AnalyticsQueryRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setBucketName(value);
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.setScopeName(value);
      break;
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setStatement(value);
      break;
    case 2:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setReadOnly(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setClientContextId(value);
      break;
    case 4:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setPriority(value);
      break;
    case 5:
      var value = /** @type {!proto.couchbase.analytics.v1.AnalyticsQueryRequest.ScanConsistency} */ (reader.readEnum());
      msg.setScanConsistency(value);
      break;
    case 6:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.addPositionalParameters(value);
      break;
    case 7:
      var value = msg.getNamedParametersMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readBytes, null, "", "");
         });
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.couchbase.analytics.v1.AnalyticsQueryRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.couchbase.analytics.v1.AnalyticsQueryRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.couchbase.analytics.v1.AnalyticsQueryRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.couchbase.analytics.v1.AnalyticsQueryRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(message, 8));
  if (f != null) {
    writer.writeString(
      8,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 9));
  if (f != null) {
    writer.writeString(
      9,
      f
    );
  }
  f = message.getStatement();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeBool(
      2,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeString(
      3,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeBool(
      4,
      f
    );
  }
  f = /** @type {!proto.couchbase.analytics.v1.AnalyticsQueryRequest.ScanConsistency} */ (jspb.Message.getField(message, 5));
  if (f != null) {
    writer.writeEnum(
      5,
      f
    );
  }
  f = message.getPositionalParametersList_asU8();
  if (f.length > 0) {
    writer.writeRepeatedBytes(
      6,
      f
    );
  }
  f = message.getNamedParametersMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(7, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeBytes);
  }
};


/**
 * @enum {number}
 */
proto.couchbase.analytics.v1.AnalyticsQueryRequest.ScanConsistency = {
  SCAN_CONSISTENCY_NOT_BOUNDED: 0,
  SCAN_CONSISTENCY_REQUEST_PLUS: 1
};

/**
 * optional string bucket_name = 8;
 * @return {string}
 */
proto.couchbase.analytics.v1.AnalyticsQueryRequest.prototype.getBucketName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * @param {string} value
 * @return {!proto.couchbase.analytics.v1.AnalyticsQueryRequest} returns this
 */
proto.couchbase.analytics.v1.AnalyticsQueryRequest.prototype.setBucketName = function(value) {
  return jspb.Message.setField(this, 8, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.couchbase.analytics.v1.AnalyticsQueryRequest} returns this
 */
proto.couchbase.analytics.v1.AnalyticsQueryRequest.prototype.clearBucketName = function() {
  return jspb.Message.setField(this, 8, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.couchbase.analytics.v1.AnalyticsQueryRequest.prototype.hasBucketName = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * optional string scope_name = 9;
 * @return {string}
 */
proto.couchbase.analytics.v1.AnalyticsQueryRequest.prototype.getScopeName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, ""));
};


/**
 * @param {string} value
 * @return {!proto.couchbase.analytics.v1.AnalyticsQueryRequest} returns this
 */
proto.couchbase.analytics.v1.AnalyticsQueryRequest.prototype.setScopeName = function(value) {
  return jspb.Message.setField(this, 9, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.couchbase.analytics.v1.AnalyticsQueryRequest} returns this
 */
proto.couchbase.analytics.v1.AnalyticsQueryRequest.prototype.clearScopeName = function() {
  return jspb.Message.setField(this, 9, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.couchbase.analytics.v1.AnalyticsQueryRequest.prototype.hasScopeName = function() {
  return jspb.Message.getField(this, 9) != null;
};


/**
 * optional string statement = 1;
 * @return {string}
 */
proto.couchbase.analytics.v1.AnalyticsQueryRequest.prototype.getStatement = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.couchbase.analytics.v1.AnalyticsQueryRequest} returns this
 */
proto.couchbase.analytics.v1.AnalyticsQueryRequest.prototype.setStatement = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional bool read_only = 2;
 * @return {boolean}
 */
proto.couchbase.analytics.v1.AnalyticsQueryRequest.prototype.getReadOnly = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 2, false));
};


/**
 * @param {boolean} value
 * @return {!proto.couchbase.analytics.v1.AnalyticsQueryRequest} returns this
 */
proto.couchbase.analytics.v1.AnalyticsQueryRequest.prototype.setReadOnly = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.couchbase.analytics.v1.AnalyticsQueryRequest} returns this
 */
proto.couchbase.analytics.v1.AnalyticsQueryRequest.prototype.clearReadOnly = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.couchbase.analytics.v1.AnalyticsQueryRequest.prototype.hasReadOnly = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional string client_context_id = 3;
 * @return {string}
 */
proto.couchbase.analytics.v1.AnalyticsQueryRequest.prototype.getClientContextId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.couchbase.analytics.v1.AnalyticsQueryRequest} returns this
 */
proto.couchbase.analytics.v1.AnalyticsQueryRequest.prototype.setClientContextId = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.couchbase.analytics.v1.AnalyticsQueryRequest} returns this
 */
proto.couchbase.analytics.v1.AnalyticsQueryRequest.prototype.clearClientContextId = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.couchbase.analytics.v1.AnalyticsQueryRequest.prototype.hasClientContextId = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional bool priority = 4;
 * @return {boolean}
 */
proto.couchbase.analytics.v1.AnalyticsQueryRequest.prototype.getPriority = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 4, false));
};


/**
 * @param {boolean} value
 * @return {!proto.couchbase.analytics.v1.AnalyticsQueryRequest} returns this
 */
proto.couchbase.analytics.v1.AnalyticsQueryRequest.prototype.setPriority = function(value) {
  return jspb.Message.setField(this, 4, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.couchbase.analytics.v1.AnalyticsQueryRequest} returns this
 */
proto.couchbase.analytics.v1.AnalyticsQueryRequest.prototype.clearPriority = function() {
  return jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.couchbase.analytics.v1.AnalyticsQueryRequest.prototype.hasPriority = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional ScanConsistency scan_consistency = 5;
 * @return {!proto.couchbase.analytics.v1.AnalyticsQueryRequest.ScanConsistency}
 */
proto.couchbase.analytics.v1.AnalyticsQueryRequest.prototype.getScanConsistency = function() {
  return /** @type {!proto.couchbase.analytics.v1.AnalyticsQueryRequest.ScanConsistency} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {!proto.couchbase.analytics.v1.AnalyticsQueryRequest.ScanConsistency} value
 * @return {!proto.couchbase.analytics.v1.AnalyticsQueryRequest} returns this
 */
proto.couchbase.analytics.v1.AnalyticsQueryRequest.prototype.setScanConsistency = function(value) {
  return jspb.Message.setField(this, 5, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.couchbase.analytics.v1.AnalyticsQueryRequest} returns this
 */
proto.couchbase.analytics.v1.AnalyticsQueryRequest.prototype.clearScanConsistency = function() {
  return jspb.Message.setField(this, 5, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.couchbase.analytics.v1.AnalyticsQueryRequest.prototype.hasScanConsistency = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * repeated bytes positional_parameters = 6;
 * @return {!(Array<!Uint8Array>|Array<string>)}
 */
proto.couchbase.analytics.v1.AnalyticsQueryRequest.prototype.getPositionalParametersList = function() {
  return /** @type {!(Array<!Uint8Array>|Array<string>)} */ (jspb.Message.getRepeatedField(this, 6));
};


/**
 * repeated bytes positional_parameters = 6;
 * This is a type-conversion wrapper around `getPositionalParametersList()`
 * @return {!Array<string>}
 */
proto.couchbase.analytics.v1.AnalyticsQueryRequest.prototype.getPositionalParametersList_asB64 = function() {
  return /** @type {!Array<string>} */ (jspb.Message.bytesListAsB64(
      this.getPositionalParametersList()));
};


/**
 * repeated bytes positional_parameters = 6;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getPositionalParametersList()`
 * @return {!Array<!Uint8Array>}
 */
proto.couchbase.analytics.v1.AnalyticsQueryRequest.prototype.getPositionalParametersList_asU8 = function() {
  return /** @type {!Array<!Uint8Array>} */ (jspb.Message.bytesListAsU8(
      this.getPositionalParametersList()));
};


/**
 * @param {!(Array<!Uint8Array>|Array<string>)} value
 * @return {!proto.couchbase.analytics.v1.AnalyticsQueryRequest} returns this
 */
proto.couchbase.analytics.v1.AnalyticsQueryRequest.prototype.setPositionalParametersList = function(value) {
  return jspb.Message.setField(this, 6, value || []);
};


/**
 * @param {!(string|Uint8Array)} value
 * @param {number=} opt_index
 * @return {!proto.couchbase.analytics.v1.AnalyticsQueryRequest} returns this
 */
proto.couchbase.analytics.v1.AnalyticsQueryRequest.prototype.addPositionalParameters = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 6, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.couchbase.analytics.v1.AnalyticsQueryRequest} returns this
 */
proto.couchbase.analytics.v1.AnalyticsQueryRequest.prototype.clearPositionalParametersList = function() {
  return this.setPositionalParametersList([]);
};


/**
 * map<string, bytes> named_parameters = 7;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,!(string|Uint8Array)>}
 */
proto.couchbase.analytics.v1.AnalyticsQueryRequest.prototype.getNamedParametersMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,!(string|Uint8Array)>} */ (
      jspb.Message.getMapField(this, 7, opt_noLazyCreate,
      null));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.couchbase.analytics.v1.AnalyticsQueryRequest} returns this
 */
proto.couchbase.analytics.v1.AnalyticsQueryRequest.prototype.clearNamedParametersMap = function() {
  this.getNamedParametersMap().clear();
  return this;};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.couchbase.analytics.v1.AnalyticsQueryResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.couchbase.analytics.v1.AnalyticsQueryResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.couchbase.analytics.v1.AnalyticsQueryResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.couchbase.analytics.v1.AnalyticsQueryResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.couchbase.analytics.v1.AnalyticsQueryResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    rowsList: msg.getRowsList_asB64(),
    metaData: (f = msg.getMetaData()) && proto.couchbase.analytics.v1.AnalyticsQueryResponse.MetaData.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.couchbase.analytics.v1.AnalyticsQueryResponse}
 */
proto.couchbase.analytics.v1.AnalyticsQueryResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.couchbase.analytics.v1.AnalyticsQueryResponse;
  return proto.couchbase.analytics.v1.AnalyticsQueryResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.couchbase.analytics.v1.AnalyticsQueryResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.couchbase.analytics.v1.AnalyticsQueryResponse}
 */
proto.couchbase.analytics.v1.AnalyticsQueryResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.addRows(value);
      break;
    case 2:
      var value = new proto.couchbase.analytics.v1.AnalyticsQueryResponse.MetaData;
      reader.readMessage(value,proto.couchbase.analytics.v1.AnalyticsQueryResponse.MetaData.deserializeBinaryFromReader);
      msg.setMetaData(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.couchbase.analytics.v1.AnalyticsQueryResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.couchbase.analytics.v1.AnalyticsQueryResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.couchbase.analytics.v1.AnalyticsQueryResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.couchbase.analytics.v1.AnalyticsQueryResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRowsList_asU8();
  if (f.length > 0) {
    writer.writeRepeatedBytes(
      1,
      f
    );
  }
  f = message.getMetaData();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.couchbase.analytics.v1.AnalyticsQueryResponse.MetaData.serializeBinaryToWriter
    );
  }
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.couchbase.analytics.v1.AnalyticsQueryResponse.Metrics.prototype.toObject = function(opt_includeInstance) {
  return proto.couchbase.analytics.v1.AnalyticsQueryResponse.Metrics.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.couchbase.analytics.v1.AnalyticsQueryResponse.Metrics} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.couchbase.analytics.v1.AnalyticsQueryResponse.Metrics.toObject = function(includeInstance, msg) {
  var f, obj = {
    elapsedTime: (f = msg.getElapsedTime()) && google_protobuf_duration_pb.Duration.toObject(includeInstance, f),
    executionTime: (f = msg.getExecutionTime()) && google_protobuf_duration_pb.Duration.toObject(includeInstance, f),
    resultCount: jspb.Message.getFieldWithDefault(msg, 3, 0),
    resultSize: jspb.Message.getFieldWithDefault(msg, 4, 0),
    mutationCount: jspb.Message.getFieldWithDefault(msg, 5, 0),
    sortCount: jspb.Message.getFieldWithDefault(msg, 6, 0),
    errorCount: jspb.Message.getFieldWithDefault(msg, 7, 0),
    warningCount: jspb.Message.getFieldWithDefault(msg, 8, 0),
    processedObjects: jspb.Message.getFieldWithDefault(msg, 9, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.couchbase.analytics.v1.AnalyticsQueryResponse.Metrics}
 */
proto.couchbase.analytics.v1.AnalyticsQueryResponse.Metrics.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.couchbase.analytics.v1.AnalyticsQueryResponse.Metrics;
  return proto.couchbase.analytics.v1.AnalyticsQueryResponse.Metrics.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.couchbase.analytics.v1.AnalyticsQueryResponse.Metrics} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.couchbase.analytics.v1.AnalyticsQueryResponse.Metrics}
 */
proto.couchbase.analytics.v1.AnalyticsQueryResponse.Metrics.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new google_protobuf_duration_pb.Duration;
      reader.readMessage(value,google_protobuf_duration_pb.Duration.deserializeBinaryFromReader);
      msg.setElapsedTime(value);
      break;
    case 2:
      var value = new google_protobuf_duration_pb.Duration;
      reader.readMessage(value,google_protobuf_duration_pb.Duration.deserializeBinaryFromReader);
      msg.setExecutionTime(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setResultCount(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setResultSize(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setMutationCount(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setSortCount(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setErrorCount(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setWarningCount(value);
      break;
    case 9:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setProcessedObjects(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.couchbase.analytics.v1.AnalyticsQueryResponse.Metrics.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.couchbase.analytics.v1.AnalyticsQueryResponse.Metrics.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.couchbase.analytics.v1.AnalyticsQueryResponse.Metrics} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.couchbase.analytics.v1.AnalyticsQueryResponse.Metrics.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getElapsedTime();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      google_protobuf_duration_pb.Duration.serializeBinaryToWriter
    );
  }
  f = message.getExecutionTime();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      google_protobuf_duration_pb.Duration.serializeBinaryToWriter
    );
  }
  f = message.getResultCount();
  if (f !== 0) {
    writer.writeUint64(
      3,
      f
    );
  }
  f = message.getResultSize();
  if (f !== 0) {
    writer.writeUint64(
      4,
      f
    );
  }
  f = message.getMutationCount();
  if (f !== 0) {
    writer.writeUint64(
      5,
      f
    );
  }
  f = message.getSortCount();
  if (f !== 0) {
    writer.writeUint64(
      6,
      f
    );
  }
  f = message.getErrorCount();
  if (f !== 0) {
    writer.writeUint64(
      7,
      f
    );
  }
  f = message.getWarningCount();
  if (f !== 0) {
    writer.writeUint64(
      8,
      f
    );
  }
  f = message.getProcessedObjects();
  if (f !== 0) {
    writer.writeUint64(
      9,
      f
    );
  }
};


/**
 * optional google.protobuf.Duration elapsed_time = 1;
 * @return {?proto.google.protobuf.Duration}
 */
proto.couchbase.analytics.v1.AnalyticsQueryResponse.Metrics.prototype.getElapsedTime = function() {
  return /** @type{?proto.google.protobuf.Duration} */ (
    jspb.Message.getWrapperField(this, google_protobuf_duration_pb.Duration, 1));
};


/**
 * @param {?proto.google.protobuf.Duration|undefined} value
 * @return {!proto.couchbase.analytics.v1.AnalyticsQueryResponse.Metrics} returns this
*/
proto.couchbase.analytics.v1.AnalyticsQueryResponse.Metrics.prototype.setElapsedTime = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.couchbase.analytics.v1.AnalyticsQueryResponse.Metrics} returns this
 */
proto.couchbase.analytics.v1.AnalyticsQueryResponse.Metrics.prototype.clearElapsedTime = function() {
  return this.setElapsedTime(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.couchbase.analytics.v1.AnalyticsQueryResponse.Metrics.prototype.hasElapsedTime = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional google.protobuf.Duration execution_time = 2;
 * @return {?proto.google.protobuf.Duration}
 */
proto.couchbase.analytics.v1.AnalyticsQueryResponse.Metrics.prototype.getExecutionTime = function() {
  return /** @type{?proto.google.protobuf.Duration} */ (
    jspb.Message.getWrapperField(this, google_protobuf_duration_pb.Duration, 2));
};


/**
 * @param {?proto.google.protobuf.Duration|undefined} value
 * @return {!proto.couchbase.analytics.v1.AnalyticsQueryResponse.Metrics} returns this
*/
proto.couchbase.analytics.v1.AnalyticsQueryResponse.Metrics.prototype.setExecutionTime = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.couchbase.analytics.v1.AnalyticsQueryResponse.Metrics} returns this
 */
proto.couchbase.analytics.v1.AnalyticsQueryResponse.Metrics.prototype.clearExecutionTime = function() {
  return this.setExecutionTime(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.couchbase.analytics.v1.AnalyticsQueryResponse.Metrics.prototype.hasExecutionTime = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional uint64 result_count = 3;
 * @return {number}
 */
proto.couchbase.analytics.v1.AnalyticsQueryResponse.Metrics.prototype.getResultCount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.couchbase.analytics.v1.AnalyticsQueryResponse.Metrics} returns this
 */
proto.couchbase.analytics.v1.AnalyticsQueryResponse.Metrics.prototype.setResultCount = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional uint64 result_size = 4;
 * @return {number}
 */
proto.couchbase.analytics.v1.AnalyticsQueryResponse.Metrics.prototype.getResultSize = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.couchbase.analytics.v1.AnalyticsQueryResponse.Metrics} returns this
 */
proto.couchbase.analytics.v1.AnalyticsQueryResponse.Metrics.prototype.setResultSize = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional uint64 mutation_count = 5;
 * @return {number}
 */
proto.couchbase.analytics.v1.AnalyticsQueryResponse.Metrics.prototype.getMutationCount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.couchbase.analytics.v1.AnalyticsQueryResponse.Metrics} returns this
 */
proto.couchbase.analytics.v1.AnalyticsQueryResponse.Metrics.prototype.setMutationCount = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};


/**
 * optional uint64 sort_count = 6;
 * @return {number}
 */
proto.couchbase.analytics.v1.AnalyticsQueryResponse.Metrics.prototype.getSortCount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {number} value
 * @return {!proto.couchbase.analytics.v1.AnalyticsQueryResponse.Metrics} returns this
 */
proto.couchbase.analytics.v1.AnalyticsQueryResponse.Metrics.prototype.setSortCount = function(value) {
  return jspb.Message.setProto3IntField(this, 6, value);
};


/**
 * optional uint64 error_count = 7;
 * @return {number}
 */
proto.couchbase.analytics.v1.AnalyticsQueryResponse.Metrics.prototype.getErrorCount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/**
 * @param {number} value
 * @return {!proto.couchbase.analytics.v1.AnalyticsQueryResponse.Metrics} returns this
 */
proto.couchbase.analytics.v1.AnalyticsQueryResponse.Metrics.prototype.setErrorCount = function(value) {
  return jspb.Message.setProto3IntField(this, 7, value);
};


/**
 * optional uint64 warning_count = 8;
 * @return {number}
 */
proto.couchbase.analytics.v1.AnalyticsQueryResponse.Metrics.prototype.getWarningCount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 8, 0));
};


/**
 * @param {number} value
 * @return {!proto.couchbase.analytics.v1.AnalyticsQueryResponse.Metrics} returns this
 */
proto.couchbase.analytics.v1.AnalyticsQueryResponse.Metrics.prototype.setWarningCount = function(value) {
  return jspb.Message.setProto3IntField(this, 8, value);
};


/**
 * optional uint64 processed_objects = 9;
 * @return {number}
 */
proto.couchbase.analytics.v1.AnalyticsQueryResponse.Metrics.prototype.getProcessedObjects = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 9, 0));
};


/**
 * @param {number} value
 * @return {!proto.couchbase.analytics.v1.AnalyticsQueryResponse.Metrics} returns this
 */
proto.couchbase.analytics.v1.AnalyticsQueryResponse.Metrics.prototype.setProcessedObjects = function(value) {
  return jspb.Message.setProto3IntField(this, 9, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.couchbase.analytics.v1.AnalyticsQueryResponse.MetaData.repeatedFields_ = [5];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.couchbase.analytics.v1.AnalyticsQueryResponse.MetaData.prototype.toObject = function(opt_includeInstance) {
  return proto.couchbase.analytics.v1.AnalyticsQueryResponse.MetaData.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.couchbase.analytics.v1.AnalyticsQueryResponse.MetaData} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.couchbase.analytics.v1.AnalyticsQueryResponse.MetaData.toObject = function(includeInstance, msg) {
  var f, obj = {
    requestId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    clientContextId: jspb.Message.getFieldWithDefault(msg, 2, ""),
    metrics: (f = msg.getMetrics()) && proto.couchbase.analytics.v1.AnalyticsQueryResponse.Metrics.toObject(includeInstance, f),
    signature: msg.getSignature_asB64(),
    warningsList: jspb.Message.toObjectList(msg.getWarningsList(),
    proto.couchbase.analytics.v1.AnalyticsQueryResponse.MetaData.Warning.toObject, includeInstance),
    status: jspb.Message.getFieldWithDefault(msg, 6, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.couchbase.analytics.v1.AnalyticsQueryResponse.MetaData}
 */
proto.couchbase.analytics.v1.AnalyticsQueryResponse.MetaData.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.couchbase.analytics.v1.AnalyticsQueryResponse.MetaData;
  return proto.couchbase.analytics.v1.AnalyticsQueryResponse.MetaData.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.couchbase.analytics.v1.AnalyticsQueryResponse.MetaData} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.couchbase.analytics.v1.AnalyticsQueryResponse.MetaData}
 */
proto.couchbase.analytics.v1.AnalyticsQueryResponse.MetaData.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setRequestId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setClientContextId(value);
      break;
    case 3:
      var value = new proto.couchbase.analytics.v1.AnalyticsQueryResponse.Metrics;
      reader.readMessage(value,proto.couchbase.analytics.v1.AnalyticsQueryResponse.Metrics.deserializeBinaryFromReader);
      msg.setMetrics(value);
      break;
    case 4:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setSignature(value);
      break;
    case 5:
      var value = new proto.couchbase.analytics.v1.AnalyticsQueryResponse.MetaData.Warning;
      reader.readMessage(value,proto.couchbase.analytics.v1.AnalyticsQueryResponse.MetaData.Warning.deserializeBinaryFromReader);
      msg.addWarnings(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setStatus(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.couchbase.analytics.v1.AnalyticsQueryResponse.MetaData.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.couchbase.analytics.v1.AnalyticsQueryResponse.MetaData.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.couchbase.analytics.v1.AnalyticsQueryResponse.MetaData} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.couchbase.analytics.v1.AnalyticsQueryResponse.MetaData.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRequestId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getClientContextId();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getMetrics();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.couchbase.analytics.v1.AnalyticsQueryResponse.Metrics.serializeBinaryToWriter
    );
  }
  f = message.getSignature_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      4,
      f
    );
  }
  f = message.getWarningsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      5,
      f,
      proto.couchbase.analytics.v1.AnalyticsQueryResponse.MetaData.Warning.serializeBinaryToWriter
    );
  }
  f = message.getStatus();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.couchbase.analytics.v1.AnalyticsQueryResponse.MetaData.Warning.prototype.toObject = function(opt_includeInstance) {
  return proto.couchbase.analytics.v1.AnalyticsQueryResponse.MetaData.Warning.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.couchbase.analytics.v1.AnalyticsQueryResponse.MetaData.Warning} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.couchbase.analytics.v1.AnalyticsQueryResponse.MetaData.Warning.toObject = function(includeInstance, msg) {
  var f, obj = {
    code: jspb.Message.getFieldWithDefault(msg, 1, 0),
    message: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.couchbase.analytics.v1.AnalyticsQueryResponse.MetaData.Warning}
 */
proto.couchbase.analytics.v1.AnalyticsQueryResponse.MetaData.Warning.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.couchbase.analytics.v1.AnalyticsQueryResponse.MetaData.Warning;
  return proto.couchbase.analytics.v1.AnalyticsQueryResponse.MetaData.Warning.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.couchbase.analytics.v1.AnalyticsQueryResponse.MetaData.Warning} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.couchbase.analytics.v1.AnalyticsQueryResponse.MetaData.Warning}
 */
proto.couchbase.analytics.v1.AnalyticsQueryResponse.MetaData.Warning.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setCode(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setMessage(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.couchbase.analytics.v1.AnalyticsQueryResponse.MetaData.Warning.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.couchbase.analytics.v1.AnalyticsQueryResponse.MetaData.Warning.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.couchbase.analytics.v1.AnalyticsQueryResponse.MetaData.Warning} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.couchbase.analytics.v1.AnalyticsQueryResponse.MetaData.Warning.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCode();
  if (f !== 0) {
    writer.writeUint32(
      1,
      f
    );
  }
  f = message.getMessage();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional uint32 code = 1;
 * @return {number}
 */
proto.couchbase.analytics.v1.AnalyticsQueryResponse.MetaData.Warning.prototype.getCode = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.couchbase.analytics.v1.AnalyticsQueryResponse.MetaData.Warning} returns this
 */
proto.couchbase.analytics.v1.AnalyticsQueryResponse.MetaData.Warning.prototype.setCode = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string message = 2;
 * @return {string}
 */
proto.couchbase.analytics.v1.AnalyticsQueryResponse.MetaData.Warning.prototype.getMessage = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.couchbase.analytics.v1.AnalyticsQueryResponse.MetaData.Warning} returns this
 */
proto.couchbase.analytics.v1.AnalyticsQueryResponse.MetaData.Warning.prototype.setMessage = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string request_id = 1;
 * @return {string}
 */
proto.couchbase.analytics.v1.AnalyticsQueryResponse.MetaData.prototype.getRequestId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.couchbase.analytics.v1.AnalyticsQueryResponse.MetaData} returns this
 */
proto.couchbase.analytics.v1.AnalyticsQueryResponse.MetaData.prototype.setRequestId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string client_context_id = 2;
 * @return {string}
 */
proto.couchbase.analytics.v1.AnalyticsQueryResponse.MetaData.prototype.getClientContextId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.couchbase.analytics.v1.AnalyticsQueryResponse.MetaData} returns this
 */
proto.couchbase.analytics.v1.AnalyticsQueryResponse.MetaData.prototype.setClientContextId = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional Metrics metrics = 3;
 * @return {?proto.couchbase.analytics.v1.AnalyticsQueryResponse.Metrics}
 */
proto.couchbase.analytics.v1.AnalyticsQueryResponse.MetaData.prototype.getMetrics = function() {
  return /** @type{?proto.couchbase.analytics.v1.AnalyticsQueryResponse.Metrics} */ (
    jspb.Message.getWrapperField(this, proto.couchbase.analytics.v1.AnalyticsQueryResponse.Metrics, 3));
};


/**
 * @param {?proto.couchbase.analytics.v1.AnalyticsQueryResponse.Metrics|undefined} value
 * @return {!proto.couchbase.analytics.v1.AnalyticsQueryResponse.MetaData} returns this
*/
proto.couchbase.analytics.v1.AnalyticsQueryResponse.MetaData.prototype.setMetrics = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.couchbase.analytics.v1.AnalyticsQueryResponse.MetaData} returns this
 */
proto.couchbase.analytics.v1.AnalyticsQueryResponse.MetaData.prototype.clearMetrics = function() {
  return this.setMetrics(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.couchbase.analytics.v1.AnalyticsQueryResponse.MetaData.prototype.hasMetrics = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional bytes signature = 4;
 * @return {!(string|Uint8Array)}
 */
proto.couchbase.analytics.v1.AnalyticsQueryResponse.MetaData.prototype.getSignature = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * optional bytes signature = 4;
 * This is a type-conversion wrapper around `getSignature()`
 * @return {string}
 */
proto.couchbase.analytics.v1.AnalyticsQueryResponse.MetaData.prototype.getSignature_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getSignature()));
};


/**
 * optional bytes signature = 4;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getSignature()`
 * @return {!Uint8Array}
 */
proto.couchbase.analytics.v1.AnalyticsQueryResponse.MetaData.prototype.getSignature_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getSignature()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.couchbase.analytics.v1.AnalyticsQueryResponse.MetaData} returns this
 */
proto.couchbase.analytics.v1.AnalyticsQueryResponse.MetaData.prototype.setSignature = function(value) {
  return jspb.Message.setProto3BytesField(this, 4, value);
};


/**
 * repeated Warning warnings = 5;
 * @return {!Array<!proto.couchbase.analytics.v1.AnalyticsQueryResponse.MetaData.Warning>}
 */
proto.couchbase.analytics.v1.AnalyticsQueryResponse.MetaData.prototype.getWarningsList = function() {
  return /** @type{!Array<!proto.couchbase.analytics.v1.AnalyticsQueryResponse.MetaData.Warning>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.couchbase.analytics.v1.AnalyticsQueryResponse.MetaData.Warning, 5));
};


/**
 * @param {!Array<!proto.couchbase.analytics.v1.AnalyticsQueryResponse.MetaData.Warning>} value
 * @return {!proto.couchbase.analytics.v1.AnalyticsQueryResponse.MetaData} returns this
*/
proto.couchbase.analytics.v1.AnalyticsQueryResponse.MetaData.prototype.setWarningsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 5, value);
};


/**
 * @param {!proto.couchbase.analytics.v1.AnalyticsQueryResponse.MetaData.Warning=} opt_value
 * @param {number=} opt_index
 * @return {!proto.couchbase.analytics.v1.AnalyticsQueryResponse.MetaData.Warning}
 */
proto.couchbase.analytics.v1.AnalyticsQueryResponse.MetaData.prototype.addWarnings = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 5, opt_value, proto.couchbase.analytics.v1.AnalyticsQueryResponse.MetaData.Warning, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.couchbase.analytics.v1.AnalyticsQueryResponse.MetaData} returns this
 */
proto.couchbase.analytics.v1.AnalyticsQueryResponse.MetaData.prototype.clearWarningsList = function() {
  return this.setWarningsList([]);
};


/**
 * optional string status = 6;
 * @return {string}
 */
proto.couchbase.analytics.v1.AnalyticsQueryResponse.MetaData.prototype.getStatus = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.couchbase.analytics.v1.AnalyticsQueryResponse.MetaData} returns this
 */
proto.couchbase.analytics.v1.AnalyticsQueryResponse.MetaData.prototype.setStatus = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * repeated bytes rows = 1;
 * @return {!(Array<!Uint8Array>|Array<string>)}
 */
proto.couchbase.analytics.v1.AnalyticsQueryResponse.prototype.getRowsList = function() {
  return /** @type {!(Array<!Uint8Array>|Array<string>)} */ (jspb.Message.getRepeatedField(this, 1));
};


/**
 * repeated bytes rows = 1;
 * This is a type-conversion wrapper around `getRowsList()`
 * @return {!Array<string>}
 */
proto.couchbase.analytics.v1.AnalyticsQueryResponse.prototype.getRowsList_asB64 = function() {
  return /** @type {!Array<string>} */ (jspb.Message.bytesListAsB64(
      this.getRowsList()));
};


/**
 * repeated bytes rows = 1;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getRowsList()`
 * @return {!Array<!Uint8Array>}
 */
proto.couchbase.analytics.v1.AnalyticsQueryResponse.prototype.getRowsList_asU8 = function() {
  return /** @type {!Array<!Uint8Array>} */ (jspb.Message.bytesListAsU8(
      this.getRowsList()));
};


/**
 * @param {!(Array<!Uint8Array>|Array<string>)} value
 * @return {!proto.couchbase.analytics.v1.AnalyticsQueryResponse} returns this
 */
proto.couchbase.analytics.v1.AnalyticsQueryResponse.prototype.setRowsList = function(value) {
  return jspb.Message.setField(this, 1, value || []);
};


/**
 * @param {!(string|Uint8Array)} value
 * @param {number=} opt_index
 * @return {!proto.couchbase.analytics.v1.AnalyticsQueryResponse} returns this
 */
proto.couchbase.analytics.v1.AnalyticsQueryResponse.prototype.addRows = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 1, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.couchbase.analytics.v1.AnalyticsQueryResponse} returns this
 */
proto.couchbase.analytics.v1.AnalyticsQueryResponse.prototype.clearRowsList = function() {
  return this.setRowsList([]);
};


/**
 * optional MetaData meta_data = 2;
 * @return {?proto.couchbase.analytics.v1.AnalyticsQueryResponse.MetaData}
 */
proto.couchbase.analytics.v1.AnalyticsQueryResponse.prototype.getMetaData = function() {
  return /** @type{?proto.couchbase.analytics.v1.AnalyticsQueryResponse.MetaData} */ (
    jspb.Message.getWrapperField(this, proto.couchbase.analytics.v1.AnalyticsQueryResponse.MetaData, 2));
};


/**
 * @param {?proto.couchbase.analytics.v1.AnalyticsQueryResponse.MetaData|undefined} value
 * @return {!proto.couchbase.analytics.v1.AnalyticsQueryResponse} returns this
*/
proto.couchbase.analytics.v1.AnalyticsQueryResponse.prototype.setMetaData = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.couchbase.analytics.v1.AnalyticsQueryResponse} returns this
 */
proto.couchbase.analytics.v1.AnalyticsQueryResponse.prototype.clearMetaData = function() {
  return this.setMetaData(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.couchbase.analytics.v1.AnalyticsQueryResponse.prototype.hasMetaData = function() {
  return jspb.Message.getField(this, 2) != null;
};


goog.object.extend(exports, proto.couchbase.analytics.v1);
